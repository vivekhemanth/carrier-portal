// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                 Int       @id @default(autoincrement())
  email              String    @unique
  name               String?
  passwordHash       String?
  registrationComplete Boolean @default(false) // Registered status
  quotes             Quote[]   // Carrier quotes on loads
  viewedLoads        ViewedLoad[] // Carrier views on loads
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
}

model Load {
  id                 Int       @id @default(autoincrement())
  description        String    // Basic description visible to all carriers
  fullDetails        String?   // Full details visible only to registered carriers
  price              Float?    // Visible only to registered carriers
  loadBoard          String    // The load board source
  quotes             Quote[]   // Many carriers can quote this load
  viewedBy           ViewedLoad[] // Many carriers can view this load
  createdAt          DateTime  @default(now())
}

model Quote {
  id                 Int       @id @default(autoincrement())
  price              Float     // Price quoted by carrier
  carrierId          Int
  loadId             Int
  carrier            User      @relation(fields: [carrierId], references: [id])
  load               Load      @relation(fields: [loadId], references: [id])
  createdAt          DateTime  @default(now())
}

model ViewedLoad {
  id                 Int       @id @default(autoincrement())
  userId             Int
  loadId             Int
  user               User      @relation(fields: [userId], references: [id])
  load               Load      @relation(fields: [loadId], references: [id])
  viewedAt           DateTime  @default(now())
}

